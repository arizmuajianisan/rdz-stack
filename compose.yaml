version: "3.0"

services:
  influxdb:
    image: influxdb:2.7.4
    container_name: influxdb-rdz
    ports:
      - "18086:8086"
    env_file: configurations.env
    volumes:
      - ./data_container/influxdata:/var/lib/influxdb2
      - ./data_container/config:/etc/influxdb2
    restart: always

  telegraf:
    image: telegraf:1.21
    container_name: telegraf-rdz
    depends_on:
      - influxdb
      - telegraf
    hostname: "serverpe"
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.2.1
    container_name: grafana-rdz
    ports:
      - "3000:3000"
    volumes:
      - grafana_data/config/:/var/lib/grafana
      - grafana_data/provisioning/:/etc/grafana/provisioning/
      - grafana_data/dashboards/:/var/lib/grafana/dashboards/
    environment:
      GF_USERS_ALLOW_SIGN_UP: true
      GF_SECURITY_ADMIN_USER: developer
      GF_SECURITY_ADMIN_PASSWORD: developer123456789
    links:
      - influxdb
    depends_on:
      - influxdb
    restart: on-failure:3

  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: mqtt-rdz
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto_data/config:/mosquitto/config
      - ./mosquitto_data/data:/mosquitto/data
      - ./mosquitto_data/log:/mosquitto/log
    environment:
      MQTT_USER: serverpe
      MQTT_PASSWORD: broker
    entrypoint: /mosquitto/config/init.sh
    stdin_open: true
    restart: always
    tty: true

  python-query:
    build: ./influx-exporter
    container_name: python-query-rdz
    env_file: ./influx-exporter/.env
    volumes:
      - ./influx-exporter:/app
    depends_on:
      - influxdb
    restart: unless-stopped

networks:
  default:
    name: iot-internal-network
    external: true
    driver: bridge
